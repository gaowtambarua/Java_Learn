package Algoritham;

public class Insertion_Sort {
	public Insertion_Sort() {
		shorting();
		System.out.println();
		selectionSort();
	}

	public void shorting() {
		int[] arr = { 41, 9, 9, 48, 11, 2, 11, 12, 28, 10, 15, 4, 16, 48 };

		//////////////////////////////////////////////////////////////////////////////
		/*
		 * 41,9,9,48,11,2,11,12,28,10,15,4,16,48
		 * 9,41, 9,48,11,2,11,12,28,10,15,4,16,48
		 * 9,9,41, 48,11,2,11,12,28,10,15,4,16,48
		 * 9,9,41,48, 11,2,11,12,28,10,15,4,16,48
		 * 9,9,11,41,48, 2,11,12,28,10,15,4,16,48
		 * 2,9,9,11,41,48, 11,12,28,10,15,4,16,48
		 * *************************
		 * ********
		 */

		for (int i = 1; i < arr.length; i++) {
			for (int j = i; j > 0; j--) {
				if (arr[j - 1] > arr[j]) {
					int key = arr[j];
					arr[j] = arr[j - 1];
					arr[j - 1] = key;
				}
			}
		}

		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}

	public void selectionSort() {
		int[] arr = { 41, 9, 9, 48, 11, 2, 11, 12, 28, 10, 15, 4, 16, 48 };

		//////////////////////////////////////////////////////////////////////////////
		/*
		 * 41,9,9,48,11,2,11,12,28,10,15,4,16,48
		 * 9,41, 9,48,11,2,11,12,28,10,15,4,16,48
		 * 9,9,41, 48,11,2,11,12,28,10,15,4,16,48
		 * 9,9,41,48, 11,2,11,12,28,10,15,4,16,48
		 * 9,9,11,41,48, 2,11,12,28,10,15,4,16,48
		 * 2,9,9,11,41,48, 11,12,28,10,15,4,16,48
		 * *************************
		 * ********
		 * 
		 * /// 41 10 9 2
		 * /// 10 41 9 2
		 * /// 9 10 41 2
		 * /// 2 9 10 41
		 */
		int n = arr.length;
		for (int i = 1; i < n; i++) {
			int key = arr[i];
			int j = i - 1;
			while (j >= 0 && arr[j] > key) {
				arr[j + 1] = arr[j];
				j = j - 1;
			}
			arr[j + 1] = key;
		}

		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}
}
